
optimization1:     file format elf64-x86-64


Disassembly of section .init:

0000000000001000 <_init>:
    1000:	f3 0f 1e fa          	endbr64
    1004:	48 83 ec 08          	sub    $0x8,%rsp
    1008:	48 8b 05 d9 2f 00 00 	mov    0x2fd9(%rip),%rax        # 3fe8 <__gmon_start__@Base>
    100f:	48 85 c0             	test   %rax,%rax
    1012:	74 02                	je     1016 <_init+0x16>
    1014:	ff d0                	call   *%rax
    1016:	48 83 c4 08          	add    $0x8,%rsp
    101a:	c3                   	ret

Disassembly of section .plt:

0000000000001020 <.plt>:
    1020:	ff 35 92 2f 00 00    	push   0x2f92(%rip)        # 3fb8 <_GLOBAL_OFFSET_TABLE_+0x8>
    1026:	ff 25 94 2f 00 00    	jmp    *0x2f94(%rip)        # 3fc0 <_GLOBAL_OFFSET_TABLE_+0x10>
    102c:	0f 1f 40 00          	nopl   0x0(%rax)
    1030:	f3 0f 1e fa          	endbr64
    1034:	68 00 00 00 00       	push   $0x0
    1039:	e9 e2 ff ff ff       	jmp    1020 <_init+0x20>
    103e:	66 90                	xchg   %ax,%ax
    1040:	f3 0f 1e fa          	endbr64
    1044:	68 01 00 00 00       	push   $0x1
    1049:	e9 d2 ff ff ff       	jmp    1020 <_init+0x20>
    104e:	66 90                	xchg   %ax,%ax

Disassembly of section .plt.got:

0000000000001050 <__cxa_finalize@plt>:
    1050:	f3 0f 1e fa          	endbr64
    1054:	ff 25 9e 2f 00 00    	jmp    *0x2f9e(%rip)        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    105a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

Disassembly of section .plt.sec:

0000000000001060 <clock@plt>:
    1060:	f3 0f 1e fa          	endbr64
    1064:	ff 25 5e 2f 00 00    	jmp    *0x2f5e(%rip)        # 3fc8 <clock@GLIBC_2.2.5>
    106a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000001070 <__printf_chk@plt>:
    1070:	f3 0f 1e fa          	endbr64
    1074:	ff 25 56 2f 00 00    	jmp    *0x2f56(%rip)        # 3fd0 <__printf_chk@GLIBC_2.3.4>
    107a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

Disassembly of section .text:

0000000000001080 <_start>:
    1080:	f3 0f 1e fa          	endbr64
    1084:	31 ed                	xor    %ebp,%ebp
    1086:	49 89 d1             	mov    %rdx,%r9
    1089:	5e                   	pop    %rsi
    108a:	48 89 e2             	mov    %rsp,%rdx
    108d:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
    1091:	50                   	push   %rax
    1092:	54                   	push   %rsp
    1093:	45 31 c0             	xor    %r8d,%r8d
    1096:	31 c9                	xor    %ecx,%ecx
    1098:	48 8d 3d 1c 01 00 00 	lea    0x11c(%rip),%rdi        # 11bb <main>
    109f:	ff 15 33 2f 00 00    	call   *0x2f33(%rip)        # 3fd8 <__libc_start_main@GLIBC_2.34>
    10a5:	f4                   	hlt
    10a6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    10ad:	00 00 00 

00000000000010b0 <deregister_tm_clones>:
    10b0:	48 8d 3d 59 2f 00 00 	lea    0x2f59(%rip),%rdi        # 4010 <__TMC_END__>
    10b7:	48 8d 05 52 2f 00 00 	lea    0x2f52(%rip),%rax        # 4010 <__TMC_END__>
    10be:	48 39 f8             	cmp    %rdi,%rax
    10c1:	74 15                	je     10d8 <deregister_tm_clones+0x28>
    10c3:	48 8b 05 16 2f 00 00 	mov    0x2f16(%rip),%rax        # 3fe0 <_ITM_deregisterTMCloneTable@Base>
    10ca:	48 85 c0             	test   %rax,%rax
    10cd:	74 09                	je     10d8 <deregister_tm_clones+0x28>
    10cf:	ff e0                	jmp    *%rax
    10d1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    10d8:	c3                   	ret
    10d9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000010e0 <register_tm_clones>:
    10e0:	48 8d 3d 29 2f 00 00 	lea    0x2f29(%rip),%rdi        # 4010 <__TMC_END__>
    10e7:	48 8d 35 22 2f 00 00 	lea    0x2f22(%rip),%rsi        # 4010 <__TMC_END__>
    10ee:	48 29 fe             	sub    %rdi,%rsi
    10f1:	48 89 f0             	mov    %rsi,%rax
    10f4:	48 c1 ee 3f          	shr    $0x3f,%rsi
    10f8:	48 c1 f8 03          	sar    $0x3,%rax
    10fc:	48 01 c6             	add    %rax,%rsi
    10ff:	48 d1 fe             	sar    $1,%rsi
    1102:	74 14                	je     1118 <register_tm_clones+0x38>
    1104:	48 8b 05 e5 2e 00 00 	mov    0x2ee5(%rip),%rax        # 3ff0 <_ITM_registerTMCloneTable@Base>
    110b:	48 85 c0             	test   %rax,%rax
    110e:	74 08                	je     1118 <register_tm_clones+0x38>
    1110:	ff e0                	jmp    *%rax
    1112:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    1118:	c3                   	ret
    1119:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001120 <__do_global_dtors_aux>:
    1120:	f3 0f 1e fa          	endbr64
    1124:	80 3d e5 2e 00 00 00 	cmpb   $0x0,0x2ee5(%rip)        # 4010 <__TMC_END__>
    112b:	75 2b                	jne    1158 <__do_global_dtors_aux+0x38>
    112d:	55                   	push   %rbp
    112e:	48 83 3d c2 2e 00 00 	cmpq   $0x0,0x2ec2(%rip)        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    1135:	00 
    1136:	48 89 e5             	mov    %rsp,%rbp
    1139:	74 0c                	je     1147 <__do_global_dtors_aux+0x27>
    113b:	48 8b 3d c6 2e 00 00 	mov    0x2ec6(%rip),%rdi        # 4008 <__dso_handle>
    1142:	e8 09 ff ff ff       	call   1050 <__cxa_finalize@plt>
    1147:	e8 64 ff ff ff       	call   10b0 <deregister_tm_clones>
    114c:	c6 05 bd 2e 00 00 01 	movb   $0x1,0x2ebd(%rip)        # 4010 <__TMC_END__>
    1153:	5d                   	pop    %rbp
    1154:	c3                   	ret
    1155:	0f 1f 00             	nopl   (%rax)
    1158:	c3                   	ret
    1159:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001160 <frame_dummy>:
    1160:	f3 0f 1e fa          	endbr64
    1164:	e9 77 ff ff ff       	jmp    10e0 <register_tm_clones>

0000000000001169 <fibonacci>:
    1169:	f3 0f 1e fa          	endbr64
    116d:	55                   	push   %rbp
    116e:	53                   	push   %rbx
    116f:	48 83 ec 08          	sub    $0x8,%rsp
    1173:	89 fb                	mov    %edi,%ebx
    1175:	b8 00 00 00 00       	mov    $0x0,%eax
    117a:	e8 aa 00 00 00       	call   1229 <helper_func>
    117f:	89 c2                	mov    %eax,%edx
    1181:	89 d9                	mov    %ebx,%ecx
    1183:	48 8d 35 7e 0e 00 00 	lea    0xe7e(%rip),%rsi        # 2008 <_IO_stdin_used+0x8>
    118a:	bf 02 00 00 00       	mov    $0x2,%edi
    118f:	b8 00 00 00 00       	mov    $0x0,%eax
    1194:	e8 d7 fe ff ff       	call   1070 <__printf_chk@plt>
    1199:	89 d8                	mov    %ebx,%eax
    119b:	83 fb 01             	cmp    $0x1,%ebx
    119e:	7e 14                	jle    11b4 <fibonacci+0x4b>
    11a0:	8d 7b ff             	lea    -0x1(%rbx),%edi
    11a3:	e8 c1 ff ff ff       	call   1169 <fibonacci>
    11a8:	89 c5                	mov    %eax,%ebp
    11aa:	8d 7b fe             	lea    -0x2(%rbx),%edi
    11ad:	e8 b7 ff ff ff       	call   1169 <fibonacci>
    11b2:	01 e8                	add    %ebp,%eax
    11b4:	48 83 c4 08          	add    $0x8,%rsp
    11b8:	5b                   	pop    %rbx
    11b9:	5d                   	pop    %rbp
    11ba:	c3                   	ret

00000000000011bb <main>:
    11bb:	f3 0f 1e fa          	endbr64
    11bf:	53                   	push   %rbx
    11c0:	e8 9b fe ff ff       	call   1060 <clock@plt>
    11c5:	48 89 c3             	mov    %rax,%rbx
    11c8:	bf 19 00 00 00       	mov    $0x19,%edi
    11cd:	e8 97 ff ff ff       	call   1169 <fibonacci>
    11d2:	89 c1                	mov    %eax,%ecx
    11d4:	ba 19 00 00 00       	mov    $0x19,%edx
    11d9:	48 8d 35 85 0e 00 00 	lea    0xe85(%rip),%rsi        # 2065 <_IO_stdin_used+0x65>
    11e0:	bf 02 00 00 00       	mov    $0x2,%edi
    11e5:	b8 00 00 00 00       	mov    $0x0,%eax
    11ea:	e8 81 fe ff ff       	call   1070 <__printf_chk@plt>
    11ef:	e8 6c fe ff ff       	call   1060 <clock@plt>
    11f4:	48 29 d8             	sub    %rbx,%rax
    11f7:	66 0f ef c0          	pxor   %xmm0,%xmm0
    11fb:	f2 48 0f 2a c0       	cvtsi2sd %rax,%xmm0
    1200:	66 0f 28 c8          	movapd %xmm0,%xmm1
    1204:	f2 0f 5e 0d 6c 0e 00 	divsd  0xe6c(%rip),%xmm1        # 2078 <_IO_stdin_used+0x78>
    120b:	00 
    120c:	48 8d 35 1d 0e 00 00 	lea    0xe1d(%rip),%rsi        # 2030 <_IO_stdin_used+0x30>
    1213:	bf 02 00 00 00       	mov    $0x2,%edi
    1218:	b8 02 00 00 00       	mov    $0x2,%eax
    121d:	e8 4e fe ff ff       	call   1070 <__printf_chk@plt>
    1222:	b8 00 00 00 00       	mov    $0x0,%eax
    1227:	5b                   	pop    %rbx
    1228:	c3                   	ret

0000000000001229 <helper_func>:
    1229:	f3 0f 1e fa          	endbr64
    122d:	b8 34 53 00 00       	mov    $0x5334,%eax
    1232:	83 e8 01             	sub    $0x1,%eax
    1235:	75 fb                	jne    1232 <helper_func+0x9>
    1237:	b8 d5 00 00 00       	mov    $0xd5,%eax
    123c:	c3                   	ret

Disassembly of section .fini:

0000000000001240 <_fini>:
    1240:	f3 0f 1e fa          	endbr64
    1244:	48 83 ec 08          	sub    $0x8,%rsp
    1248:	48 83 c4 08          	add    $0x8,%rsp
    124c:	c3                   	ret
